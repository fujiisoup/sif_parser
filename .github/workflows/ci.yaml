name: CI
on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  workflow_dispatch: # allows you to trigger manually

jobs:
  detect-ci-trigger:
    name: detect ci trigger
    runs-on: ubuntu-latest
    if: |
      github.repository == 'fujiisoup/sif_parser'
      && (github.event_name == 'push' || github.event_name == 'pull_request')
    outputs:
      triggered: ${{ steps.detect-trigger.outputs.trigger-found }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
  test:
    name: Set up python
    runs-on: ubuntu-latest
    needs: detect-ci-trigger
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        # Bookend python versions
        python-version: ["3.8", "3.10"]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags.
      - name: Set environment variables
        uses: actions/setup-python@v4
        with:
          python-version:  ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          echo "TODAY=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
          echo "CONDA_ENV_FILE=ci/requirements/py${{ matrix.python-version }}.yml" >> $GITHUB_ENV
      - name: Setup miniconda
        run: |
          conda env create -n test_env --file $CONDA_ENV_FILE;
          conda init bash;
          conda activate test_env;
          conda list;
          pip install --no-deps -e .;
      - name: Install sif_parser
        run: |
          python -m pip install --no-deps -e .
      - name: Version info
        run: |
          conda info -a
          conda list
      - name: Import sif_parser
        run: |
          python -c "import sif_parser"
      - name: Run tests
        run: |
          python -m pytest
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test results for ${{ runner.os }}-${{ matrix.python-version }}
          path: pytest.xml
